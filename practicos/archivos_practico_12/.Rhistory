install.packages('tidyverse')
library(tidyverse)
install.packages('googledrive')
install.packages('httr')
install.packages("tidyverse")
install.packages("rvest")
install.packages("tidyverse")
library(tidyverse)
setwd("~/Documents/pracitcos_linea_de_comandos/practicos/archivos_practico_12")
# cargo las librerias que utilizamos en el practico
library(magrittr)
# cargo las librerias que utilizamos en el practico
library(magrittr)
library(tidyverse)
# cargo la tabla CSV
aeropuertos = readr::read_csv('airport-codes.csv')
aeropuertos
# realizo una modificacion con la libreria tidyr
aeropuertos %<>% tidyr::separate(data = ., col = 'coordinates', into = c('lon', 'lat'), sep = ', ')
aeropuertos$lat %<>% as.numeric()
aeropuertos$lon %<>% as.numeric()
aeropuertos
# visualizamos un caso en el cual existen NAs en nuestra tabla.
aeropuertos %>%
filter(is.na(iso_country))
paises_vs_continentes = read_csv('country-and-continent-codes-list-csv') %>% dplyr::select(Continent_Name, Two_Letter_Country_Code)
paises_vs_continentes
aeropuertos %>%
left_join(x = ., y = paises_vs_continentes, by = c('iso_country' = 'Two_Letter_Country_Code')) %>%
dplyr::select(-continent) -> aeropuertos
aeropuertos
# analizamos el numero de aeropuertos por continente
aeropuertos %>%
# seleccionamos columnas de interes
dplyr::select(name, Continent_Name) %>%
# nos deshacemos de filas repetidas
unique() %>%
# agrupamos segun valor en columna 'Continent_Name'
group_by(Continent_Name) %>%
# obtenemos el resumen
summarise(numero_aeropuertos = n())
# analizaremos el tipo de aeropuertos que hay por continente
aeropuertos %>%
dplyr::select(name, Continent_Name, type) %>%
unique() %>%
# en este caso agrupamos segun dos columnas, 'Continent_Name' y 'type'
group_by(Continent_Name, type) %>%
summarise(numero_aeropuertos = n())
# tomamos los datos de aeropuerto
aeropuertos %>%
# seteamos las variables a representarse en de los ejes x e y,
ggplot(data = .,
mapping = aes(x = lon, y = lat)) +
# seteamos el tipo de geometria  a ser usada ('point')
geom_point()
# podemos a su vez colorear en funcion de la columna 'continente'
aeropuertos %>%
ggplot(data = .,
mapping = aes(x = lon, y = lat, color = Continent_Name)) +
geom_point()
# nos focalizaremos en America del Sur, coloreando segun pais
aeropuertos %>%
dplyr::filter(., Continent_Name == 'South America') %>%
ggplot(data = .,
mapping = aes(x = lon, y = lat, color = iso_country)) +
geom_point()
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point()
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point(alpha = 0.35)
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU' | iso_country == 'NZ') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point()
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU' | iso_country == 'NZL') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point()
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU' | iso_country == 'NZ') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point()
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU' | iso_country == 'NZ') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point() +
xlim(0, 200)
# Filtraremos en base a un pais especifico, Australia (codigo AU). Coloreamos segun tipo de aeropuerto
aeropuertos %>%
filter(iso_country == 'AU' | iso_country == 'NZ') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point() +
xlim(100, 200)
# Observamos como se distribuye el tipo de aeropuertos en America del Sur.
aeropuertos %>%
filter(Continent_Name == 'South America') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point()
# Observamos como se distribuye el tipo de aeropuertos en America del Sur.
aeropuertos %>%
filter(Continent_Name == 'South America') %>%
ggplot(data = ., mapping = aes(x = lon, y = lat, color = type)) + geom_point(alpha = 0.15)
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
# en este caso utilizamos una geometria de tipo 'boxplot'
geom_boxplot()
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
# en este caso utilizamos una geometria de tipo 'boxplot'
geom_violin()
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
# en este caso utilizamos una geometria de tipo 'boxplot'
geom_boxplot()
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
# en este caso utilizamos una geometria de tipo 'boxplot'
geom_violin()
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
geom_boxplot() +
# realizamos una subdivision 'en funcion' (~) de la columna 'type'
facet_wrap(~type)
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
# realizamos una subdivision 'en funcion' (~) de la columna 'type'
facet_wrap(~type)
aeropuertos %>%
dplyr::filter(!is.na(elevation_ft)) %>%
ggplot(data = .,
mapping = aes(x = Continent_Name, y = elevation_ft, color = Continent_Name)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
# realizamos una subdivision 'en funcion' (~) de la columna 'type'
facet_wrap(~type, scale = 'free_y')
